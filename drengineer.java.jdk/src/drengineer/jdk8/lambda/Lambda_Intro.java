package drengineer.jdk8.lambda;

public class Lambda_Intro {
/*https://www.youtube.com/watch?v=gpIUfj3KaOc&list=PLqq-6Pq4lTTa9YGfyhyW2CqdtW9RtY-I3
 * 
 * 1. Enables functional programming
 * 함수형 프로그래밍 가능 
 *2. Readable and concise code
 *읽기 쉽고 쉬운 코드
 *3. API,Library 사용이 더 쉬움
 *4. parallel processing(병렬 처리 가능)
 **/
	
 /*
  * OOP
  * 모든 것은 Object
  * 모든 블록은 class와 Object와 "associated"연관
  * 
  * 
  * functional vs OOP
  * 
  * 함수형 프로그래밍은 병렬적, 객체지향은 수평적
  * 함수형 프로그래밍은 빅데이터 유리, 객체지향은 불리
  * 함수형 프로그래밍은 일시적으로 사용, 객체지향은 형태보존 
  * 
  * http://drengineer.tistory.com/221
  * */
	
/*inline values
	String name="foo";
	double pi=3.14;
	aBlockOFCode= void perform(){
			System.out.println("Hello !");
	}
	
    aBlockOFCode= ()->System.out.println("Hello !");
	
	
*/
	
}
